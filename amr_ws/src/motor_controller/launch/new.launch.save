<launch>
  <node pkg="rosserial_python" type="serial_node.py" name="arduino_uno" args="/dev/ttyACM0" />
  <node pkg="rosserial_python" type="serial_node.py" name="arduino_mega" args="/dev/ttyACM1" />
  <node pkg="motor_controller" type="odom_node1" name="odometry_publisher" />
  <node pkg="motor_controller" type="pose_goal_pub" name="Pose_Goal_Publisher" />

  <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.24 0 0.147 0 0 0 base_link laser 30" />
  <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.021 0 0 0 base_footprint base_link 30" />
  <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
  <!-- map to odom will be provided by the AMCL -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />

  <!-- Lidar Data Publisher Using RPLIDAR from Slamtec -->
  <!-- Used for obstacle avoidance and can be used for mapping -->
  <!-- Publish: /scan -->
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
    <!--param name="serial_baudrate"  type="int"    value="256000"--><!--A3 -->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

  !-- Map File -->
  <arg name="map_file" default="$(find motor_controller)/map/irp_lobby.yaml"/>
